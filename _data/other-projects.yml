- name: Microsoft 365
  url: https://www.microsoft.com/en-us/microsoft-365/
  code: #
  description: Implemented cloud SaaS technology by starting with Skype For Business for all users, then using SharePoint Online with custom lists and libraries, OneDrive for business for all users
  used:
    - thing: SharePoint Online
    - thing: Exchange Online
    - thing: OneDrive For Business
    - thing: Skype for Business
    - thing: Microsoft Teams
    - thing: Project Online
    - thing: Dynamics 365

- name: VMware Horizon Cloud
  url: https://www.vmware.com/products/horizon-cloud-virtual-desktops.html
  code: 
  description: 
  used:
    - thing: VDI
    - thing: VPN Tunnel
    - thing: End User Computing
    - thing: 
    - thing: 

- name: Azure Windows Virtual Desktop
  url: https://azure.microsoft.com/en-us/services/virtual-desktop/
  code:
  description: A Virtual Desktop Infrastructure option in Azure was implemeted for around 200 users around the world, had to deploy host pool in various Azure regions like US, Europe, South Africa and India. This Project was a migration from VMware Horizon Cloud.
  used:
    - thing: Azure
    - thing: Microsoft 365
    - thing: VDI
    - thing: VPN Tunnel
    - thing: Migration

- name: Barracuda Cloud Backup
  url: 
  code: 
  description: 
  used:
    - thing: 
    - thing: 
    - thing: 
    - thing: 

- name: SharePoint Cloud Migration
  url: 
  code: 
  description: Migrated over 100,000 documents from various lists and libraries in On-Premises SharePoint 2003, 2007 and 2010 environments to SharePoint Online using ShareGate
  used:
    - thing: ShareGate
    - thing: SharePoint Online
    - thing: SharePoint 2003, 2007, 2010
    - thing: PowerShell
    - thing: SharePoint CSOM

- name: Cloud Migration (Exchange)
  url: http://quiet-dusk-89245.herokuapp.com/
  code: https://github.com/bchiang7/DemoWebApp
  description: A simple weather app I made at HubSpot's Fall 2016 Web App Workshop with Node.js, Express, and Heroku. I used the OpenWeatherMap API to get weather and forecast data, and then used the current city's coordinates to create a map background that reflected the current city using the Google Maps API.
  img: weather
  used:
    - thing: JavaScript
    - thing: CSS
    - thing: Node.js
    - thing: Express
    - thing: Heroku
    - thing: OpenWeatherMap API
    - thing: Google Maps API
